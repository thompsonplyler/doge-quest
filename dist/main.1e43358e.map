{"version":3,"sources":["src/main.js"],"names":["document","addEventListener","phaserGame","gameBox","getElementsByTagName","setAttribute","scoreBox","createElement","style","visibility","append","config","type","Phaser","AUTO","width","height","parent","physics","default","scene","preload","create","update","image","player","cursors","game","Game","scoreText","score","bones","load","spritesheet","frameWidth","frameHeight","tilemapTiledJSON","map","make","tilemap","key","tileset","addTilesetImage","groundLayer","createStaticLayer","worldLayer","setCollisionByProperty","collides","add","sprite","setCollideWorldBounds","text","fontSize","fill","anims","frames","frame","frameRate","repeat","generateFrameNumbers","start","end","input","keyboard","createCursorKeys","physicsGroup","createFromObjects","overlap","collectBone","mailman","collider","hitMailman","setVelocity","left","isDown","setVelocityX","play","right","up","setVelocityY","down","bone","disableBody","setText","DOM","AddToDOM","getElementById","innerText","fetch","method","headers","body","JSON","stringify","pause","setTint","gameOver"],"mappings":"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","file":"main.1e43358e.map","sourceRoot":"..","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function(){\n    \n    phaserGame()\n    gameBox = document.getElementsByTagName(\"canvas\")[0]\n    gameBox.setAttribute(\"id\",\"game-box\")\n    scoreBox = document.createElement(\"span\")\n    scoreBox.style.visibility = \"hidden\"\n    scoreBox.setAttribute(\"id\",\"score-box\")\n    gameBox.append(scoreBox)\n\n\n    \n})\n\nfunction phaserGame(){\nvar config = {\n    type: Phaser.AUTO,\n    width: 1200,\n    height: 700,\n    parent: \"game\",\n    // backgroundColor: '#0072bc',\n    physics: {\n        default: 'arcade'\n    },\n    scene: {\n        preload: preload,\n        create: create,\n        update: update\n    }\n};\n\nvar image\nvar player\nvar cursors\nvar game = new Phaser.Game(config);\nvar scoreText\nvar score = 0\nvar bones\n\n\n// console.log(scoreList)\nfunction preload ()\n{\n\n\n    this.load.image('bone', 'dist/assets/image/bone.png')\n    this.load.image('mailman', 'dist/assets/image/mailman.png')        \n    \n    this.load.spritesheet('shiba_down', \n    'dist/assets/sprite/shibaInu-0.png',\n    { frameWidth: 32, frameHeight: 32 })\n    \n    this.load.spritesheet('shiba_up', \n    'dist/assets/sprite/shibaInu-2.png',\n    { frameWidth: 32, frameHeight: 32 })\n    \n    this.load.spritesheet('shiba_left', \n    'dist/assets/sprite/shibaInu-3.png',\n    { frameWidth: 32, frameHeight: 32 })\n    \n    this.load.spritesheet('shiba_right', \n    'dist/assets/sprite/shibaInu-1.png',\n    { frameWidth: 32, frameHeight: 32 })\n    \n    this.load.spritesheet('shiba_turn', \n    'dist/assets/sprite/shibaInu-4.png',\n    { frameWidth: 32, frameHeight: 32 })\n    \n    this.load.image(\"overworld\", \"dist/assets/tile/overworld.png\")\n    this.load.image(\"objects\", \"dist/assets/tile/objects.png\")\n    this.load.tilemapTiledJSON('map','dist/assets/tile/phaser-proj.json')\n    \n}\n\n\n\nfunction create ()\n{\n    const map = this.make.tilemap({key: \"map\"});\n    \n    const tileset = map.addTilesetImage(\"overworld\", \"overworld\");\n    \n    const groundLayer = map.createStaticLayer(\"ground\", tileset, 0, 0);\n    const worldLayer = map.createStaticLayer(\"world\", tileset, 0, 0);\n    worldLayer.setCollisionByProperty({ collides: true });\n    player = this.physics.add.sprite(200,200, \"shiba_turn\")\n    player.setCollideWorldBounds(true);\n\n    scoreText = this.add.text(16, 16, `Score: ${score}`, { fontSize: '32px', fill: '#000' });\n    \n    this.anims.create({\n        key: 'turn',\n        frames: [ { key: 'shiba_turn', frame: 0 } ],\n        frameRate: 1,\n        repeat: 1\n    });\n    \n    this.anims.create({\n        key: 'right',\n        frames: this.anims.generateFrameNumbers('shiba_right', { start: 1, end: 3 }),\n        frameRate: 8,\n        repeat: -1\n    });\n    \n    this.anims.create({\n        key: 'left',\n        frames: this.anims.generateFrameNumbers('shiba_left', { start: 1, end: 2 }),\n        frameRate: 8,\n        repeat: -1\n    });\n    \n    this.anims.create({\n        key: 'up',\n        frames: this.anims.generateFrameNumbers('shiba_up', { start: 1, end: 2 }),\n        frameRate: 8,\n        repeat: -1\n    });\n    \n    this.anims.create({\n        key: 'down',\n        frames: this.anims.generateFrameNumbers('shiba_down', { start: 1, end: 2 }),\n        frameRate: 8,\n        repeat: -1\n    });\n    \n    cursors = this.input.keyboard.createCursorKeys()\n    this.bones = this.game.add.physicsGroup()\n    bones = map.createFromObjects('objects', 1574, { key: 'bone' }, this.bones);\n\n    // this.bones = this.game.add.physicsGroup(); // step 1\n    // this.map.createFromObjects('objects', 'bone', 'objects', 1574, true, false, this.bones); // step 2\n    \n    // step 3\n    // this.bones.forEach(function(bone){\n    //     bone.body.immovable = true;\n    // });    \n\n\n   \n    this.physics.add.overlap(player, bones, collectBone, null, this);\n   \n    mailman = this.physics.add.image(300,300,'mailman')\n    this.physics.add.collider(player, mailman, hitMailman, null, this)\n   \n    this.physics.add.collider(player,worldLayer)\n    \n}\n\nfunction update ()\n{\n    player.setVelocity(0);\n    \n    if (cursors.left.isDown)\n    {\n        player.setVelocityX(-160);\n        player.anims.play('left', true);\n    }\n    else if (cursors.right.isDown)\n    {\n        player.setVelocityX(500);\n        player.anims.play('right', true);\n    }\n\n    if (cursors.up.isDown)\n    {\n        player.setVelocityY(-160);\n        player.anims.play('up', true);\n    }\n    else if (cursors.down.isDown)\n    {\n        player.setVelocityY(160);\n        player.anims.play('down', true);\n    }\n}\n\n\n\nfunction collectBone(player, bone){\n    bone.disableBody(true, true);\n    score += 10;\n    scoreText.setText(`Score: ${score}`)\n}\n\nfunction hitMailman(player, mailman){\n    \n    scoreBox = Phaser.DOM.AddToDOM(document.getElementById(\"score-box\"))\n    scoreBox.innerText = score \n\n    fetch(\"http://localhost:3000\", { \n    method: \"post\",\n    headers: {\"Content-Type\": \"application/json\"},\n    body: JSON.stringify({\"score\":score})})    \n    // can = Phaser.DOM.AddToDOM(document.getElementsByTagName(\"canvas\"))\n    // console.log(can)\n    \n    this.physics.pause();\n    player.setTint(0xff0000);\n    player.anims.play('turn');\n    gameOver = true;\n\n}\n}"]}